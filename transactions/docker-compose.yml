services:
  db:
    image: postgres:15-alpine
    container_name: transactions_db
    environment:
      POSTGRES_USER: transactions_user
      POSTGRES_PASSWORD: transactions_password
      POSTGRES_DB: transactions_db
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U transactions_user -d transactions_db"]
      interval: 10s
      timeout: 5s
      retries: 5

  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: transactions_api
    ports:
      - "8080:8080"
    environment:
      DB_HOST: db
      DB_PORT: 5432
      DB_USER: transactions_user
      DB_PASSWORD: transactions_password
      DB_NAME: transactions_db
      DB_SSLMODE: disable
    depends_on:
      db:
        condition: service_healthy
    restart: unless-stopped
#     Add volumes if you want to live-reload code during development
#     volumes:
#       - .:/app # Mounts current directory to /app in the container

  prometheus:
    image: prom/prometheus:v2.47.2 # Use a specific version
    container_name: prometheus_transactions
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    command:
      - "--config.file=/etc/prometheus/prometheus.yml"
      - "--storage.tsdb.path=/prometheus"
      - "--web.console.libraries=/usr/share/prometheus/console_libraries"
      - "--web.console.templates=/usr/share/prometheus/consoles"
    depends_on:
      - app
    restart: unless-stopped
  grafana:
    container_name: grafana_transactions
    image: grafana/grafana:9.1.7
    ports:
      - "3000:3000"
    volumes:
      - ./grafana.yml:/etc/grafana/provisioning/datasources/prometheus_ds.yml
    depends_on:
    - prometheus

volumes:
  postgres_data:
  prometheus_data:
